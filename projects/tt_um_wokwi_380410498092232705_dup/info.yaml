documentation:
  author: Jonathan Zentgraf
  bidirectional:
  - none
  - none
  - none
  - none
  - none
  - none
  - none
  - none
  clock_hz: 0
  description: Sends 'Hello' over UART and fills die space with metastability
  discord: ''
  doc_link: ''
  external_hw: ''
  how_it_works: 'The UART transmitter is just a shift register with hardcoded initial
    values.

    The output of the shift register is fed back into itself in an infinite loop.

    The "RNN" is a few flip-flops feeding into each other to use up die space. :)

    '
  how_to_test: "Testing UART is simple:\n1. Connect the UART output to a microcontroller\
    \ or scope.\n2. Set load/enable low (load).\n3. Set output enable high.\n4. Set\
    \ load/enable high (enable).\n5. Observe as the string \"Hello\\n\" is sent over\
    \ UART.\n\nThe RNN module is trained on random Wokwi wiring, and might be smarter\
    \ than a single human neuron.\nIt probably detects something we mortals cannot\
    \ comprehend, and is tied to inputs 0-3 and outputs 0-3.\nIt may be fun to drive\
    \ these with a very fast clock.\n  \n"
  inputs:
  - RNN input 0
  - RNN input 1
  - RNN input 2
  - RNN input 3
  - none
  - none
  - Shift register load (low) / enable (high)
  - UART output enable
  language: Wokwi
  outputs:
  - RNN output 0
  - RNN output 1
  - RNN output 2
  - RNN output 3
  - none
  - none
  - UART output enabled
  - UART output
  picture: ''
  tag: ''
  title: UART Greeter with RNN Module
project:
  tiles: 1x1
  top_module: tt_um_wokwi_380410498092232705_dup
  wokwi_id: 0
yaml_version: 4
