documentation:
  author: Binh Nguyen
  bidirectional:
  - second counter bit 0
  - second counter bit 1
  - second counter bit 2
  - second counter bit 3
  - second counter bit 4
  - second counter bit 5
  - second counter bit 6
  - second counter bit 7
  clock_hz: 10000000
  description: Update neuron weight using spike-timing dependent plasticity
  discord: mattvenn
  doc_link: ''
  external_hw: ''
  how_it_works: "\nUses a set of registers to implement a leaky integrate-and-fire\
    \ (LIF) neuron for spike-timing dependent plasticity learning (STDP) rule.\n Two\
    \ LIF neurons are instantiated and a stdp module handles the logic for the timing\
    \ and weight update.\n"
  how_to_test: '

    After reset, a current is applied at different amplitudes and the input to the
    neuron is integrated at every clock cycle

    If a pre-synaptic spike and post-synaptic spike occurs, time difference is measured
    and applied to the synatic weight update

    for this connection.

    '
  inputs:
  - drive current
  language: Verilog
  outputs:
  - LIF spike
  - LIF state
  - synaptic weight
  picture: ''
  tag: timer, test
  title: Spike-timing dependent plasticity (Verilog Demo)
project:
  source_files:
  - tt_um_stdp.v
  - lif.v
  - stdp.v
  tiles: 1x1
  top_module: tt_um_stdp_dup
  wokwi_id: 0
yaml_version: 4
