documentation:
  author: ReJ aka Renaldas Zioma
  bidirectional:
  - (in) **BC1** bus control
  - (in) **BDIR** bus direction
  - (in) **SEL0** 0 = clock div 8, 1 = no divider
  - (in) **SEL1** 0 = clock div 8, 1 = clock div 128
  - (out) channel A (PWM)
  - (out) channel B (PWM)
  - (out) channel C (PWM)
  - (out) AUDIO OUT master (PWM)
  clock_hz: 2000000
  description: The AY-3-8913 is a 3-voice programmable sound generator (PSG) chip
    from General Instruments. The AY-3-8913 is a smaller variant of AY-3-8910 or its
    analog YM2149.
  discord: rzioma
  doc_link: README.md
  external_hw: DAC (for ex. Digilent R2R PMOD), RC filter, amplifier, speaker
  how_it_works: "\nThis Verilog implementation is a replica of the classical **[AY-3-8913](https://en.wikipedia.org/wiki/General_Instrument_AY-3-8910)**\
    \ programmable sound generator.\nWith roughly a 1500 logic gates this design fits\
    \ on a **single tile** of the TinyTapeout.\n\nThe main goals of this project are:\n\
    \n1. closely replicate the behavior and eventually the complete **design of the\
    \ original** AY-3-891x with builtin DACs\n2. provide a readable and well documented\
    \ code for educational and hardware **preservation** purposes\n3. leverage the\
    \ **modern fabrication** process\n\nA significant effort was put into a thorough\
    \ **test suite** for regression testing and validation against the original chip\
    \ behavior.\n\n# Chip technical capabilities\n\n- **3 square wave** tone generators\n\
    - **1 noise** generator\n- **1 envelope** generator with 10 patterns\n- Capable\
    \ to produce a range of waves typically from **122 Hz** to **125 kHz**, defined\
    \ by **12-bit** registers.\n- **16** different volume levels\n\n# Historical use\
    \ of the AY-3-891x\n\nThe AY-3-891x family of programmable sound generators was\
    \ introduced by General Instrument in 1978. Variants of the AY-3-891x were broadly\
    \ used:\n\n- home computers: Amstrad CPC, Atari ST, Oric-1, Sharp X1, MSX, ZX\
    \ Spectrum 128/+2/+3\n- game consoles: Intellivision, Vectrex\n- and arcade machines\n\
    \nThe AY-3-891x chip family competed with the similar [Texas Instruments SN76489](https://en.wikipedia.org/wiki/Texas_Instruments_SN76489).\n\
    \n### The reverse engineered AY-3-891x \n\nThis implementation would not be possible\
    \ without the reverse engineered [schematics and analysis](https://github.com/lvd2/ay-3-8910_reverse_engineered)\n\
    based on decapped [AY-3-8910](https://siliconpr0n.org/map/gi/ay-3-8910) and [AY-3-8914](https://siliconpr0n.org/map/gi/ay-3-8914)\
    \ chips.\n"
  how_to_test: "### Test-suite\n\nFirst of all, run the test suite:\n\n```\n$ cd src\n\
    $ make\n```\n\n### Connect chip to the speaker\n\nThere are several ways to connect\
    \ this chip to the microcontroller and speaker.\n\nOne option is to connect off\
    \ the shelf data parallel Digital to Analog Converter (DAC)\nfor example [Digilent\
    \ R2R Pmod](https://digilent.com/reference/pmod/pmodr2r/start) to the output pins\
    \ and\nroute the resulting analog audio to piezo speaker or amplifier.\n\nAnother\
    \ option is to use the Pulse Width Modulated (PWM) AUDIO OUT pin with OpAmp+capacitor\
    \ based integrator or capacitor based low-pass filter and a speaker:\n\n```\n\
    \  uController             AY-3-8913\n  ,---------.            ,---._.---. \n\
    \  |         |    2 Mhz ->|CLK  SEL0|<-- 0\n  |    GPIOx|----------->|BC1  SEL1|<--\
    \ 0\n  |    GPIOx|----------->|BDIR     |\n  |    GPIOx|----------->|D0      \
    \ |\n  |    GPIOx|----------->|D1       |\n  |    GPIOx|----------->|D2      \
    \ |          C1\n  |    GPIOx|----------->|D3       |     ,----||----.\n  |  \
    \  GPIOx|----------->|D4       |     |          | \n  |    GPIOx|----------->|D5\
    \       |     |  OpAmp   |        Speaker     \n  |    GPIOx|----------->|D6 \
    \ AUDIO|     |   |\\     |            /|\n  |    GPIOx|----------->|D7   OUT |-----.---|-\\\
    \    |   C2   .--/ |\n  `---------'            `---------'         |  }---.---||---|\
    \    |\n                                          ,--|+/             `--\\ |\n\
    \                                          |  |/               |  \\|\n      \
    \                                    |                   |\n                 \
    \                    GND ---             GND ---  \n```\n\n\n### Externally configurable\
    \ clock divider\n\n| SEL1 | SEL0 | Description                        | Clock\
    \ frequency|\n|------|------|------------------------------------|----------------|\n\
    | 0    |    0 | Standard mode, clock divided by 8  | 1.7 .. 2.0 MHz |\n| 1   \
    \ |    1 |           -----//-----             | 1.7 .. 2.0 MHz |\n| 0    |   \
    \ 1 | New mode for TT05, no clock divider| 250 .. 500 kHZ |\n| 1    |    0 | New\
    \ mode for TT05, clock div. 128  |  25 .. 50  MHz |\n"
  inputs:
  - DA0 - multiplexed data/address bus
  - DA1 - multiplexed data/address bus
  - DA2 - multiplexed data/address bus
  - DA3 - multiplexed data/address bus
  - DA4 - multiplexed data/address bus
  - DA5 - multiplexed data/address bus
  - DA6 - multiplexed data/address bus
  - DA7 - multiplexed data/address bus
  language: Verilog
  outputs:
  - audio out (pwm)
  - digita audio least significant bit
  - digita audio
  - digita audio
  - digita audio
  - digita audio
  - digita audio
  - digita audio most significant bit
  picture: docs/AY-3-8913.jpg
  tag: psg, music, sound
  title: Classic 8-bit era Programmable Sound Generator AY-3-8913
project:
  source_files:
  - attenuation.v
  - tone.v
  - noise.v
  - envelope.v
  - signal_edge.v
  - pwm.v
  - tt_um_rejunity_ay8913.v
  tiles: 1x1
  top_module: tt_um_rejunity_ay8913_dup
  wokwi_id: 0
yaml_version: 4
