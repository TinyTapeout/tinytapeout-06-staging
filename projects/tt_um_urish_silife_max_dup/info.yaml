documentation:
  author: Uri Shaked
  bidirectional:
  - cell_in[0]
  - cell_in[1]
  - cell_in[2]
  - cell_in[3]
  - cell_in[4]
  - cell_in[5]
  - cell_in[6]
  - cell_in[7]
  clock_hz: 10000000
  description: Silicon implementation of Conway's Game of Life with LED Dot Matrix
    Output
  discord: urish
  doc_link: ''
  external_hw: MAX7219 LED Matrix (FC-16 module)
  how_it_works: 'It is a silicon implementation of Conway''s Game of Life. The game
    is played on a 8x32 grid, and the rules are as follows:

    - Any live cell with fewer than two live neighbours dies, as if by underpopulation.

    - Any live cell with two or three live neighbours lives on to the next generation.

    - Any live cell with more than three live neighbours dies, as if by overpopulation.

    - Any dead cell with exactly three live neighbours becomes a live cell, as if
    by reproduction.

    '
  how_to_test: "Demo mode: \nThe demo mode loads a pre-defined game into the grid\
    \ and advances it automatically.\nTo enter the demo mode, `wr_en` high while reseting\
    \ the design (`rst_n` low).\nUse the `pattern_sel` inputs to select the desired\
    \ demo pattern.\nSet `en` to 1 to automatically advance one generation every 0.4\
    \ seconds (assuming a 10MHz clock).\nTo pause the game, set `en` to 0.\n\nManual\
    \ mode: \nLoad the initial grid row by row. \nEach row is loaded by selecting\
    \ the row number (using the `row_sel[4:0]` inputs),\nsetting the `cell_in[7:0]`\
    \ inputs to the desired state, and pulsing the `wr_en` input.\n\nOnce the grid\
    \ is loaded, set the `en` input to 1 to start the game. \nThe game will advance\
    \ one step in each clock cycle.\nTo pause the game, set the `en` input to 0.\n\
    \nTo view the current state of the grid, set the `row_sel[4:0]` inputs to the\
    \ desired row number,\n`max7219_en` to 0, and read the `cell_out[7:0]` outputs.\n\
    \nAlternatively, set `max7129_en` to 1 to display the grid on a MAX7219 LED Matrix\
    \ (FC-16 module).\n"
  inputs:
  - row_sel[0] / pattern_sel
  - row_sel[1]
  - rol_sel[2]
  - rol_sel[3]
  - rol_sel[4]
  - max7129_en
  - en
  - wr_en
  language: Verilog
  outputs:
  - cell_out[0] / max7129_cs
  - cell_out[1] / max7129_clk
  - cell_out[2] / max7129_din
  - cell_out[3]
  - cell_out[4]
  - cell_out[5]
  - cell_out[6]
  - cell_out[7]
  picture: docs/silife-max.jpg
  tag: display, cell automata, max7219
  title: Game of Life 8x32 (siLife)
project:
  source_files:
  - cell.v
  - grid_8x32.v
  - max7219.v
  - spi_master.v
  - demo.v
  - silife.v
  tiles: 3x2
  top_module: tt_um_urish_silife_max_dup
  wokwi_id: 0
yaml_version: 4
