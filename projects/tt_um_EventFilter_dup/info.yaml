documentation:
  author: Emily Lee
  bidirectional:
  - Unused
  - Unused
  - Unused
  - Unused
  - Unused
  - Unused
  - Unused
  - Unused
  clock_hz: 10000000
  description: Implementing a Denoiser for Event Based Data in Silicon
  discord: nerfect
  doc_link: ''
  external_hw: ''
  how_it_works: "The 8 switches correspond to the tuple data input (L-R):\n  Switches\
    \ 1 & 2: Value of x (2 bits)\n  Switches 3 & 4: Value of y ''\n  Switches 5 &\
    \ 6: Value of p ''\n  Switches 7 & 8: Value of t ''\n\nThe denoiser is implemented\
    \ as a debouncer. A high or low event will only be output if the data\nremains\
    \ the same for 5 clock cycles. Due to white/thermal noise in an event camera,\
    \ a cluster of\ncoordinates that have no movement may incorectly spike high and\
    \ the result would be a singular bright bit.\nThe debouncing avoids this by first\
    \ ensuring the event is consistent before outputting. \n  \n"
  how_to_test: "Switches (L-R) 5 & 6 corresponds to the input value of the polarity\
    \ of the tuple.\nIf a high event is wanted - switch 5 should be low and switch\
    \ 6 should be high. \nIf a low event is wanted = switch 5 must be low, and switch\
    \ 6 must be low. \n  This will cause the chip to output the debounced tuple corresponding\
    \ to a high or low event.\n"
  inputs:
  - bit 1 of x
  - bit 0 of x
  - bit 1 of y
  - bit 0 of y
  - bit 1 of p - no real use
  - toggles event to be passed through if high
  - bit 1 of t
  - bit 0 of t
  language: Verilog
  outputs:
  - bit 1 of x
  - bit 0 of x
  - bit 1 of y
  - bit 0 of y
  - bit 1 of p
  - bit 0 of p
  - bit 1 of t
  - bit 0 of t
  picture: ''
  tag: event denoiser, debounce, tuple
  title: Event Denoising Circuit
project:
  source_files:
  - tt_um_EventFilter.v
  - EventFilter.v
  tiles: 1x1
  top_module: tt_um_EventFilter_dup
  wokwi_id: 0
yaml_version: 4
