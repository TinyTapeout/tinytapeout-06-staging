documentation:
  author: Paul Schulz
  bidirectional:
  - bit 0 (not used)
  - bit 1 (not used)
  - bit 2 (not used)
  - bit 3 (not used)
  - bit 4 (not used)
  - bit 5 (not used)
  - bit 6 (not used)
  - bit 7 (not used)
  clock_hz: 10000000
  description: Implementation for an Asynchronous Parallel Processor
  discord: paul.schulz
  doc_link: ''
  external_hw: ''
  how_it_works: "See Github: https://github.com/PaulSchulz/tt05-async-proc\n\nThis\
    \ circuit is an investigation into an asynchronous parallel processor design.\n\
    (Work in progress.)\n\nNote: This is a very early design and doesn't do very much.\n\
    \nA processing node follows the following state flow:\n- Wait for valid data;\n\
    - Process the data to produce an output value, and let neighboring nodes\n  know\
    \ that processing in being done;\n- Make the result available; and wait for more\
    \ data to process.\n\nIn this example, the processing node is doing a calculation\
    \ on four(4)\ninputs of 4 bits.  The calculation is based on a deconstruction\
    \ of the\nthe \"Arctic Circle Theorem\" model. ([video](https://www.youtube.com/watch?v=Yy7Q8IWNfHM))\n\
    \nIn future designs: 1) allow the processing nodes to be programmable; 2)\nlayout\
    \ a multinode interconnected array (with global clocking);\n3) investigate a clockless\
    \ version; and 4)\n"
  how_to_test: 'Reset to clear internal buffers.


    Set inputs and load them into the input buffers.


    Set clock to calculate result and display on outputs.


    Experiment by trying different input values.

    '
  inputs:
  - input bit 0
  - input bit 1
  - input bit 2
  - input bit 3
  - load input 1 (right)
  - load input 2 (up)
  - load input 3 (left)
  - load input 4 (down)
  language: Verilog
  outputs:
  - segment a (up)
  - segment b (right)
  - segment c
  - segment d (processing)
  - segment e
  - segment f (left)
  - segment g (down)
  - dot       (data ready)
  picture: doc/images/architecture.png
  tag: test, experiment
  title: Asynchronous  Parallel Processor Demonstrator
project:
  source_files:
  - tt_um_async_proc_paulschulz.v
  - block.v
  - lif.v
  - lfsr.v
  tiles: 1x1
  top_module: tt_um_async_proc_paulschulz_dup
  wokwi_id: 0
yaml_version: 4
