documentation:
  author: Gustavo Gomez
  bidirectional:
  - output multiplex first digit
  - output multiplex second digit
  - output multiplex third digit
  - output multiplex forth digit
  - output clock of seconds / testing purposes
  - output clock of minutes / testing purposes
  - output not used
  - output not used
  clock_hz: 32728
  description: Multiplexed clock with buttons
  discord: noteolvides
  doc_link: https://github.com/Noteolvides/Noteolvides_clock_TinyTapeout/blob/main/README.md
  external_hw: 7 segment 4 digits multiplexed
  how_it_works: "Basically this is a clock that counts minutes shows the hours in\
    \ the 24-hour format, it uses the dot in the 7 segments to indicate 15s 30s 45s\
    \ and 60s respectibly.\n\n```\n     -- 0 --         -- 0 --         -- 0 --  \
    \       -- 0 --   \n    |       |       |       |       |       |       |    \
    \   |  \n    5       1       5       1       5       1       5       1  \n   \
    \ |       |       |       |       |       |       |       |  \n     -- 6 --  \
    \       -- 6 --         -- 6 --         -- 6 --   \n    |       |       |    \
    \   |       |       |       |       |  \n    4       2       4       2       4\
    \       2       4       2  \n    |       |       |       |       |       |   \
    \    |       |  \n     -- 3 --  :60s   -- 3 --  :45s   -- 3 --  :30s   -- 3 --\
    \  :15s\n        \u2191               \u2191               \u2191            \
    \   \u2191    \n      Hours H         Hours L         Minutes H       Minutes\
    \ L\n    uio_out[3]      uio_out[2]       uio_out[1]      uio_out[0]     \n```\n\
    \n[6:0] of the seven segments are connected to the **uo_out** output and the 7\
    \ bit is for the dot of the seven sevements.\nThe digist are multiplexed, each\
    \ digit is shown 1ms, those pins are **uio_out[3:0]** and **uio_out[5:4]** are\
    \ used for debuging showing the clock of the seconds and minutes.\n\nFor the test\
    \ i have used [this 7 segment](https://www.tme.eu/es/details/kw4-804cgb/7-segment-led-displays/luckylight/?utm_campaign=compare-2019-08&utm_medium=cpc&utm_source=findchips.com)\
    \ with common Cathode. But you can use which ever 7 segmnet display of 4 digits\
    \ common or anode thats to the pins **ui_in[3:2]** with are use to negate the\
    \ 7 segmetents or the multixplexing. \nFinally, **ui_in[1:0]** are used with a\
    \ button to increase the hours or minutes.\n"
  how_to_test: 'I have selected a clock 32,768khz because i thought it will be easy
    to buy a ready commponent that generates a squera wave with that frecuency, we
    will see about that :stuck_out_tongue_closed_eyes:.

    Just connect the 7 segments to the **uo_out** pins and select your configuration
    anode or catothe with the **ui_in[3]** pin.

    For the multiplexing connected uio_out[3:0] to the digits as show in how to use
    drawing.


    And finally if you want to increase the numbers connect a button pull up to the
    pins **ui_in[1:0]** to increase hours or minutes.


    Generate a reset to start to init all the registers.

    '
  inputs:
  - pull up button that increases minutes
  - pull up button that increases hours
  - pin used to negate 7 segment ouputs if necesary / for catode or anode configurations
  - pin used to negate 4 pins to multiplex if necesary / for catode or anode configurations
  - not used
  - not used
  - not used
  - not used
  language: Verilog
  outputs:
  - segment a
  - segment b
  - segment c
  - segment d
  - segment e
  - segment f
  - segment g
  - dot
  picture: images/tang_nano_clock.jpg
  tag: clock
  title: Multiplexed clock
project:
  source_files:
  - tt_um_multiplexed_clock.v
  tiles: 1x1
  top_module: tt_um_multiplexed_clock_dup
  wokwi_id: 0
yaml_version: 4
