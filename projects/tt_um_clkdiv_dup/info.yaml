documentation:
  author: Austin Lo
  bidirectional:
  - division input bit 8
  - division input bit 9
  - division input bit 10
  - division input bit 11
  - division input bit 12
  - division input bit 13
  - division input bit 14
  - division input bit 15
  clock_hz: 200000000
  description: Divider up it 16bit input and a simple random number
  discord: lolo0827
  doc_link: ''
  external_hw: ''
  how_it_works: 'Uses a set of registers to divide the clock.


    Both 8 bit input are used for the divider


    Can divide up to 65565, target uses 20 Mhz as example.

    '
  how_to_test: 'After reset, the clock should be divided by the input a 20MHz input
    clock.

    Experiment by changing the inputs

    '
  inputs:
  - division input bit 0
  - division input bit 1
  - division input bit 2
  - division input bit 3
  - division input bit 4
  - division input bit 5
  - division input bit 6
  - division input bit 7
  language: Verilog
  outputs:
  - uo_out[0] clock output
  - Random Number Output
  - Random Number Output
  - Random Number Output
  - Random Number Output
  - Random Number Output
  - Random Number Output
  - Random Number Output
  picture: ''
  tag: clock, test, random number generator
  title: Clock and Random Number Gen
project:
  source_files:
  - tt_um_clkdiv.v
  tiles: 1x1
  top_module: tt_um_clkdiv_dup
  wokwi_id: 0
yaml_version: 4
