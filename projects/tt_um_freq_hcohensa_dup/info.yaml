documentation:
  author: Hannah Cohen-Sandler
  bidirectional:
  - second counter bit 0
  - second counter bit 1
  - second counter bit 2
  - second counter bit 3
  - second counter bit 4
  - second counter bit 5
  - second counter bit 6
  - second counter bit 7
  clock_hz: 10000000
  description: Encodes data into frequency variations and then decodes it back into
    its original form.
  discord: mattvenn
  doc_link: ''
  external_hw: ''
  how_it_works: 'Utilizes an array of inputs and outputs to connect to switches, 7-segment
    displays, and enable bidirectional paths.


    The bottom 7 bits of the second counter are linked to the bidirectional output.


    The clock is generated using a Phase-Locked Loop.


    The Frequency Encoder encodes data input from switches to a pulse output and uses
    the PLL output to enable the encoding operation.


    The Frequency Decoder is connected to bidirectional inputs and decodes the pulse
    signal based on the PLL output, resulting in a data output.

    '
  how_to_test: 'Confirm that the system begins in a reset state with rst_n set to
    0. Transition the system out of reset by setting rst_n to 1.

    Set the constant current input signal (ui_in) to a specific value to simulate
    different input scenarios. Activate the chip design by setting the ena signal
    to 1.

    Alter the clk clock signal frequency value and observe how the changes affect
    the design''s behavior.

    Experiment with various inputs, clock frequencies, and enabling/disabling operations
    verify the design and accuracy of the encoding, decoding, and pulse counting.

    '
  inputs:
  - current bit 11
  - current bit 12
  - current bit 13
  - current bit 14
  - current bit 15
  - current bit 16
  - current bit 17
  - current bit 18
  language: Verilog
  outputs:
  - segment a
  - segment b
  - segment c
  - segment d
  - segment e
  - segment f
  - segment g
  - segment h
  picture: ''
  tag: timer, test
  title: Frequency Encoder/Decoder
project:
  source_files:
  - tt_um_freq_hcohensa.v
  - FrequencyDecoder.v
  - FrequencyEncoder.v
  - PLL.v
  tiles: 1x1
  top_module: tt_um_freq_hcohensa_dup
  wokwi_id: 0
yaml_version: 4
